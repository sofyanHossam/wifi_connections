apply plugin: 'com.android.application'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
ext{
    VERSION_CODE = 2
    VERSION_NAME = "1.0.1"
}
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.wificonnect"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode VERSION_CODE
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


    implementation("io.github.thanosfisherman.wifiutils:wifiutils:1.6.6")
    implementation 'com.vkpapps.wifimanager:APManager:1.0.0'
}

ext {
    // This should be same as you've created in bintray
    bintrayRepo = 'AndroidWifiManager'

    // Name which will be visible on bintray
    bintrayName = 'APManager'

    // Library Details
    publishedGroupId = 'com.vkpapps.wifimanager'
    libraryName = 'Access Point Manager'
    artifact = 'APManager'
    libraryDescription = 'Access Point Manager Library'
    libraryVersion = "1.0"
    version("1.0")

    // Repository Link (For e.g. GitHub repo)
    siteUrl = 'https://github.com/vijaypatidar/AndroidWifiManager'
    gitUrl = 'https://github.com/vijaypatidar/AndroidWifiManager.git'
    githubRepository= 'vijaypatidar/AndroidWifiManager'

    // Developer Details
    developerId = 'vijaypatidar'
    developerName = 'Vijay Patidar'
    developerEmail = 'vkramotiya987@gmail.com'

    // License Details
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

// This is mandatory
group = publishedGroupId

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                groupId publishedGroupId
                artifactId = artifact
                name libraryName
                description = libraryDescription
                url siteUrl

                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}



// Avoid Kotlin docs error
tasks.withType(Javadoc) {
    enabled = false
}

// Remove javadoc related tasks
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    getArchiveClassifier().set( 'sources')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    getArchiveClassifier().set( 'javadoc')
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

bintray {
    user = System.getenv("bintrayUser")
    key = System.getenv("bintrayApiKey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
    }
}